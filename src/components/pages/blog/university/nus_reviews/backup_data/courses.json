{
  "data": {
    "courseReviews": [
      {
        "moduleName": "CS1101S : Programming Methodology I",
        "contentMain": "This module was taught in Source which is a sublanguage of Javascript built by the professors themselves. I do not have any experience with Javascript so everything was new to me. I had programming experience prior to university and thus I had no issue in learning the overall syntax. In this module, learning how to think computationally matters more. \n\nThere were missions and optional quests that were done on a game platform the professors built called Source Academy and there were 2 missions and maybe 2 optional quests released weekly which amounted to the huge workload. I personally think this module is a bit overkill in the logistics. Tutorials were fun and I made many friends during the sessions.\n\nAssessment-wise, there was a lot of CAs. These include Reading Assessments(RA) (2 of them), a midterm, a practical exam and a final. I struggled with RA1 as I was really nervous, but I did well for RA2 as I managed to keep my nerves in check. Midterm was atrocious (for me personally, others will disagree) as I panicked and could not think straight. Practical Exam was quite easy for me. I did panic which resulted me in skipping the first 5 parts of the 1st question which was supposed to be easy. Finals was ok, not hard.\n\nOverall, I do not regret not dropping this module for CS2030S because I learnt to appreciate functional programming and communicate thought processes computationally by building mental models. It forms the basis of writing good code in the future. I would highly recommend all students who have to take CS1010 variants as a core requirement to take this instead. I also encouraged others to take this module as an elective as well. A fun module, but with an unnecessarily heavy workload.",
        "slug": "cs1101s-programming-methodology-i",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 1"
        },
        "description": "This module introduces the concepts of programming and computational problem solving, and is the first and foremost introductory module to computing. \n\nStarting from a small core of fundamental abstractions, the module introduces programming as a method for communicating computational processes. The module begins with purely functional programming based on a simple substitution-based execution model, and ends with a powerful modern imperative language based on a realistic environment-based execution model. \n\nTopics covered include functional abstraction, recursion, higher-order functions, data abstraction, algorithmic strategies, state mutation, loops and arrays, evaluation strategies, sorting and searching, debugging and testing."
      },
      {
        "moduleName": "MA1521 : Calculus for Computing",
        "contentMain": "This module was taught by Prof Chan Heng Huat who is actually a number theory professor. All of us, including himself, were confused as to why he was assigned to teach this module. This prof, is a blessing. He is the most caring professor I have met and he always displays passion whenever he teaches. His lectures are twice a week from 6pm - 8pm.\n                            \nThere is a tendency for students to already be tired at that period but he really puts in the effort to get everyone engaged. He is very patient is taking questions even if they can be repetitive but he makes sure we understand the concepts well.\n\nAs mentioned above, there were 2 lectures on Wednesday and Friday, both at 6pm - 8pm. Tutorial classes were all conducted by him. He refused to hire TAs as he was worried they are not good enough. What a beast.\n\nThere is a weekly graded quiz of 5 questions every week and 3 tests. All were manageable, especially for me with a H2 Further Math / H3 Math background. What I was frustrated about (with my cohort), is that there were a lot of cheating cases which was infuriating. It made me put in more effort than I had planned on this module to be ahead of the bell curve. I appreciate how the professor handled the situation though. After I heard about the cheating cases, it strengthed my resolve to destroy those cheaters in the tests no matter what.\n\nI found this module to be of light workload and easy. I did the tutorials, quizzes and exams pretty fast and I also did quite well. I think people tend to struggle with tests of convergence for series and sequences, and double/triple integrals. Having learnt them before, it was a breeze for me.",
        "slug": "ma1521-calculus-for-computing",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 1"
        },
        "description": "This module provides a basic foundation for calculus and its related subjects required by computing students. \n\nThe objective is to train the students to be able to handle calculus techniques arising in their courses of specialization. In addition to the standard calculus material, the course also covers simple mathematical modeling techniques and numerical methods in connection with ordinary differential equations. \n\nMajor topics Preliminaries on sets and number systems. Calculus of functions of one variable and applications. Sequences, series and power series. Functions of several variables. Extrema. First and second order differential equations. Basic numerical methods for ordinary differential equations."
      },
      {
        "moduleName": "MA2001 : Linear Algebra I",
        "contentMain": "This module was taught by Prof Victor Tan and Dr Jonathan. Both are competant lecturers but I am at the slot in which Prof Victor teaches. He goes at a slow enough pace for beginners to grasp him. Patience is really key.\n\nWe are expected to watch lecture videos on Tuesdays and attend the lecture conducted via Zoom on Friday. The Zoom lectures are meant to supplement the Tuesday recorded lectures and we have the chance to do some thinking questions with the Prof. Tutorials are really meme. The TA would break us up into breakout rooms and discuss the problems. But problem is no one will talk. It will be radio silence until some hero (usually me) start to speak up. It is very annoying. But whatever, because I already learnt Linear Algebra in H2 F-Math, so I have nothing to lose. Tutorial questions are easy for me. We also had to do Matlab worksheets, which was quite new to me and I thoroughly enjoyed it.\n\nAssessment-wise, tutorial attendance (not participation lol) was graded, we have 5 HW and a Final exam. The 5 HW was easy for me, but I will cross-check answers with my friends in case got any computation carelessness.\n\nEasy module for H2 Fmath students, I have no issue with the module. Even if it is taught by a trash professor, I think I will do well regardless. Finals was easy for me. Make sure to utilise MATLAB fully to save time on computation. It is open book as well, but I would highly advise against referring to material as it just shows you do not have a good grasp on the concepts. Do the textbook questions. JUST DO THEM!",
        "slug": "ma2001-linear-algebra-i",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 1"
        },
        "description": "This module is a first course in linear algebra. Fundamental concepts of linear algebra will be introduced and investigated in the context of the Euclidean spaces R^n. Proofs of results will be presented in the concrete setting. \n\nStudents are expected to acquire computational facilities and geometric intuition with regard to vectors and matrices. Some applications will be presented. Major topics Systems of linear equations, matrices, determinants, Euclidean spaces, linear combinations and linear span, subspaces, linear independence, bases and dimension, rank of a matrix, inner products, eigenvalues and eigenvectors, diagonalization, linear transformations between Euclidean spaces, applications."
      },
      {
        "moduleName": "CS1231S : Discrete Structures",
        "contentMain": "This module was taught by Prof Aaron Tan and Prof Wong Tin Lok (from Math dept). Prof Aaron is very passionate and Prof Wong's notes are top-class and rigorous. If you ask me, I prefer Prof Wong teaching this entire module.\n\nThere are 2 lectures, 1 x 2hr and 1 x 1hr and 1 x 2hr tutorial. Tutorial sheets are challenging which I enjoy solving a lot.\n\nThis module is actually my favourite module for my first semester of university. This is because it was new content that I had never learnt before. The ideas were not hard to grasp, but the questions can be very unnecessarily complex. I have a bone to pick though towards the end of the module, specifically Trees and Graphs. These topics are the most important in my opinion, especially when studying Graph Algorithms. However, there was such little time, that it was being rushed through. Hence, there was not enough time to actually internalise, appreciate and grasp the concept. I struggled alot with the last 2 topics. I actually did reasonably well for the Midterms but messed up the Finals as the nerves took over and my mind went blank. I was actually pretty confident of acing the Finals but I guess the pressure got the better of me. I did not do so well hence. Expected an A, but got somewhere near. This failure will forever haunt me.",
        "slug": "cs1231s-discrete-structures",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 1"
        },
        "description": "This module introduces mathematical tools required in the study of computer science. Topics include \n\n(1) Logic and proof techniques propositions, conditionals, quantifications. (2) Relations and Functions Equivalence relations and partitions. Partially ordered sets. Well-Ordering Principle. Function equality. Boolean/identity/inverse functions. Bijection. (3) Mathematical formulation of data models (linear model, trees, graphs). (4) Counting and Combinatoric Pigeonhole Principle. Inclusion-Exclusion Principle. Number of relations on a set, number of injections from one finite set to another, Diagonalization proof An infinite countable set has an uncountable power set; Algorithmic proof An infinite set has a countably infinite subset. Subsets of countable sets are countable."
      },
      {
        "moduleName": "GEC1030 : Metropolis : A City in World History",
        "contentMain": "This module was taught Prof Reyes Portia. She is a very kind and patient Prof. As I was just a freshman navigating my way through University, I constantly emailed her whenever I had doubts. She was quick to reply and encouraging as well. I was once confused by the Chicago Style Citation as there were many variations so I emailed her for clarification. She is a very passionate professor as well and anyone would be lucky to have her teach them. This is my first GE mod under FASS and I do not regret this.\n\nThis module is 100% CA : CA1 is a 250 essay on an image, CA2 is something like an online commentary, CA3 and CA4 are joint final projects\n\nThere is only one lecture every week and we just had to watch videos. Tutorials occur every fortnightly. My TA is Tomoko and she is very helpful. I had a lot of trouble with my essays as I am not really that good in writing but she readily gave me tips on how to improve. Hence, my CA grades improved tremendously. I got a B- for CA1, B+ for CA2 and finally A- for my final project. My tip for this module, hence, is to always seek feedback from your TA directly if you want to improve your CA grades. They are really helpful!\n\nThis module is very chill for me. I have always enjoyed History as a kid and I enjoyed learning about the History of cities. It is very mindblowing when I learned some of the new ideas pertaining to cities. I used to struggle with essays, so when I got my first B- for my CA1, I was really crushed because I thought I had put in a lot of heart and effort but to no favourable results. However, I enjoyed writing CA2 and my final project because I started to learn how to form unique and critical arguments and this led to deeper discussions in my essays. I also tried to put myself in the perspective of the people living in the cities by watching a lot of documentaries and films online. This really made me \"feel\" the module, if you can relate.",
        "slug": "gec1030-metropolis-a-city-in-world-history",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 1"
        },
        "description": "More people live in cities now than in any other point in history: how does this change human culture and civilisations? Cities tell a story of our world; they are a testament to humankind’s ability to reshape the environment in lasting ways. They reveal how we interact with the environment and with each other. Cities are created in many forms and for many reasons ranging from defense, religion and economic activity. Through case studies this module examines urban history, lived experiences and how city life has changed over time."
      },
      {
        "moduleName": "CS2030S : Programming Methodology II",
        "contentMain": "This module is taught by Prof Boyd Anderson and Prof Ooi Wei Tsang.\n\nThere are 2 x 2hr lectures and 1 x 1hr Recitation and 1 x 2hr Labs each week\n\nThere are weekly labs, 2 Practical Exams, 1 Midterm and a Final. The labs are meant to make sure you have hands-on experience in applying what you have learnt. The 2 Practical exams are notorious for being challenging, however, I somehow managed to get close to full marks for them. For PA1, I got 29/30 only because I was blind. The compiler threw a warning of raw types, but I cannot find it for some reason. Took me 1hr after the exam ended to finally locate it. I thought I messed up the finals but somehow performed in the upper quartile. Finals was easy for me.\n\nI personally feel very stressed about this module. This is because I am very new to Java as I am used to writing only C++ code. The labs were also very tedious and I would spend quite a while to complete. Marks were deducted for the most trivial mistakes. It is insufficient to just learn from the notes, one needs to code often to really grasp the concepts. Experiment as much as possible and understand why something does or does not work. It is very crucial to find out what you are unsure about and this will help you greatly, as it had helped me. I faced some health issues when doing this module too as I got struck with dengue on the day of PA2. I had to miss lessons but I made enough new friends to actually help me catch up. My TA also managed to accommodate me when I had to rush to the hospital for the blood test by setting up a Zoom Lab lesson. As for module content, this is the first time I came across functional object-oriented programming. Hence, everything was very interesting for me. I was particularly interested in Monads, Functors and also Asynchronous Programming. It prompted me to explore them a little bit deeper after exams and now I am planning to take CS3211 Parallel and Concurrent Programming. Despite all the challenges, I was heartened to get an A for this module.",
        "slug": "cs2030s-programming-methodology-ii",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module is a follow up to CS1010. It explores two modern programming paradigms, object-oriented programming and functional programming. Through a series of integrated assignments, students will learn to develop medium-scale software programs in the order of thousands of lines of code and tens of classes using object-oriented design principles and advanced programming constructs available in the two paradigms. \n\nTopics include objects and classes, composition, association, inheritance, interface, polymorphism, abstract classes, dynamic binding, lambda expression, effect-free programming, first class functions, closures, continuations, monad, etc."
      },
      {
        "moduleName": "CS2040S : Data Structures and Algorithms",
        "contentMain": "This module was taught by Prof Seth Gilbert. Prof Seth tends to speed during the lecture, hence I was unable to understand, let alone internalise what he delivered. However, he is very passionate about algorithms.\n\nThere are 2 x 2hr lectures and 1 x 1hr recitation and 1 x 2hr tutorial.\n\nThere are 8 Problem Sets done on Coursemology with several optional PSets for the opportunity to gain for XPs, followed by a Midterm and a Final. The weightages are not disclosed.\n\nI enjoyed this module very much despite the large workload. We were given a 1hr crash course on Java on our 2nd lecture which I do not really follow. For some reason. I personally learnt a lot for this module. It really deepens the way I think of using algorithms to solve problems. Sometimes, we just have to modify the problem and use the algorithm as a black box, otherwise, we can modify an aspect of the algorithm to solve a problem instance. \n\nRecitations were taught by Jin Zhe, who is very encouraging. I always make the effort to voice out any ideas fearlessly and even managed to solve a question brilliantly. Recitations will introduce more materials which are also examinable. It mainly contains topics that could not be squeezed into the main lecture series, like B-trees, Heaps and Graph Transformation. I struggled a bit by Dynamic Programming as it is the last topic and was taught pretty rushed. I did average for Midterms but very well for the Finals. I think most importantly, we must learn to be flexible and exploit the advantages of several data structures to solve the problem effeciently. This really motivated me to pursue the Algorithms and Theory track. I highly recommend reading CLRS for a better grasp for the topics.\n\n",
        "slug": "cs2040s-data-structures-and-algorithms",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module introduces students to the design and implementation of fundamental data structures and algorithms. The module covers basic data structures (linked lists, stacks, queues, hash tables, binary heaps, trees, and graphs), searching and sorting algorithms, and basic analysis of algorithms."
      },
      {
        "moduleName": "ST2334 : Probability and Statistics",
        "contentMain": "This module is taught by the Statistics Department, Prof Chan Yiu Man and Prof Yu Tao. I belonged to the lecture group of the latter.\n\nThere are 2 x 2hr lecture slots, but one of the lecture slots was used to watch the lecture recording, the other was simply a zoom lecture to consolidate the content learnt. For Prof Yu Tao, we requested for pop quiz every lecture which he gladly obliged.\n\nThere are 4 quizzes throughout the module totally 30% in total, then a final exam worth 70% (35 MCQ, or fill in the blanks, no partial marks, no backward navigation)\n\nThis module is a breeze for me since most of the content was taught during H2 Mathematics and Further Mathematics. However, there were new topics like F-distribution, Joint Probability Distributions etc. However, they were not much of an issue. If you own a graphical calculator, getting the answer is a matter of pushing buttons on it. I was very annoyed by the format of the Finals. I had to convince myself an answer is correct before moving on. There is no chance for any regret or dumb mistakes. Tutorials were a piece of cake. I attend the online Tutorials but paid zero attention to the tutor.",
        "slug": "st2334-probability-and-statistics",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module introduces students to basic probability theory and statistical inference. Topics include basic concepts of probability, conditional probability, independence, random variables, joint and marginal distributions, mean and variance, some common probability distributions, sampling distributions, estimation and hypothesis testing based on a normal population."
      },
      {
        "moduleName": "IS1103 : Ethics in Computing",
        "contentMain": "The module is coordinated (not taught) by Dr Lu Weiquan. We were told to read the textbook, 1 chapter per week and answer 10 MCQ questions for 10 weeks. The questions were very subjective and me and my friends actually spent time debating on a lot of issues. Perhaps that was the intended purpose? I did learn something from the module. I might be one of the only few people that think this module is actually essential but not delivered effectively.\n\nThis is actually a very light workload module. The quiz questions could be CTRL-F-ed. Best to collaborate with your friends and save an SU for this module just in case your effort does not bear any fruit.",
        "slug": "is1103-ethics-in-computing",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module gives an introduction to Ethics in the Computing domain. Students will learn about the importance of Ethics in Computing policy-making and be able to make judgements and decisions based on established ethical frameworks (such as Deontology, Consequentialism, Social Contract Theory and Virtue Ethics). \n\nThe objective is to develop students to be ethical computing decision-makers who can analyse and explain their decisions in real-world policy-making situations. Issues in emerging areas such as Digital Intellectual Property Rights, Artificial Intelligence, Big Data, Social Media, Hacking, and interface design may also be discussed in relation to Ethics."
      },
      {
        "moduleName": "GEA1000 : Quantitative Reasoning with Data",
        "contentMain": "This module is taught via sectional teaching. It occurs every 2 weeks\n\nWeekly quizzes are given and there are multiple attempts allowed. A lot of us scored full marks for this part of the assessment. We had to complete a midterm, project and final.\n\nI really lost patience and hated this module with a passion. This module is too trivial for me so I totally did not care about this module. I was concurrently taking ST2334 and I felt that a lot of material taught in GEA1000 was repeated and not rigorous which lost my attention and appreciation for the module. Midterms went disastrous for me because of an invigilator who keeps distracting me by turning on her mic over zoom to call people out to turn on their camera every 2 minutes which led me to constantly lose my train of thoughts and redid the question. Hence I was really dissatisfied with my performance over the midterms. For the project, I pretty much carried most of the time because apparently I am the only one who knows what is going on. I even at the last minute, spotted a very glaring error and had to correct them on the spot. I pretty much gave up for the finals but it is not that hard as well. After the midterms, I was mentally prepared to SU this stupid module.",
        "slug": "gea1000-quantitative-reasoning-with-data",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module aims to equip undergraduate students with essential data literacy skills to analyse data and make decisions under uncertainty. It covers the basic principles and practice for collecting data and extracting useful insights, illustrated in a variety of application domains. \n\nFor example, when two issues are correlated (e.g., smoking and cancer), how can we tell whether the relationship is causal (e.g., smoking causes cancer)? How can we deal with categorical data? Numerical data? What about uncertainty and complex relationships? These and many other questions will be addressed using data software and computational tools, with real-world data sets."
      },
      {
        "moduleName": "GESS1027 : La Kopi: Forging of the Chinese Singaporean Community",
        "contentMain": "This module was taught by, honestly I cannot remember. My TA, I also dont know.\n\nThere are 2 essays to be written, and a final.\n\nThere is a lecture and a tutorial which occurs fortnightly. I would say that the tutorials are not really that interesting and we had to prepare presentations on the spot (and they are graded)\n\nI think I learnt a lot from the module and it is actually quite chill. It deepened my understanding of my own heritage and connection to my ancestors in this region. It is indeed an eye-opening experience. The tutorials however, are a complete waste of my time. I also experienced what class participation wars are for the first time. I personally do not take part in these type of stunts because I believe one should just keep his own mouth shut instead of bs-ing something of no value.",
        "slug": "gess1027-la-kopi-forging-of-the-chinese-singaporean-community",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Semester 2"
        },
        "description": "This module introduces students to the forging of the Chinese Singaporean community by observing the changes in linguistic data over time. Drawing linguistic data from different aspects of society and entertainment (eg. food, movies, theatre and so on), the module aims to reveal to students how the Chinese community has evolved from being a community with multiple languages to a single, unified language. Influential professionals in their field of expertise will also share from their personal experience the evolution of the Chinese community, and how the Chinese Singaporean community fits into Singapore’s multiracial society.\n"
      },
      {
        "moduleName": "CP2106 : Independent Software Development Project (Orbital)",
        "contentMain": "This module is my first forray into Software Engineering. My partner and I attempted Orbital at the Artemis level. Everything was new to me and I had to learn a lot of technologies from scratch. Previously, I only had research background and I normally play around with research problems. My partner and I built a mobile application which can help students do module planning more seamlessly by using a SAT Solver. Our TA was very encouraging and was always ready to lend a helping hand by giving us useful advice to point us in the right direction when we lack the necessary technical knowledge.\n\nThe entire frontend was built using XML and Android Java with Materials UI whereas the backend (Solver) was built entirely in Python. One particular problem I encountered was handling database calls. I realised, through monitoring the database calls, that reading and writing into the database was asynchronous. When I tried to write and read into the database in that sequence, I realised that the document was being modified whilst being read, which lead to a lot of incorrect output. I had no experience in Asynchronous Programming, but I learnt how to use the Completable Future Monad to handle such database calls. I even took up Parallel Programming courses so that I could better understand how multi-threading works and how to go about properly parallelising tasks.\n\nMy partner and I also had issues with the UI design of our Android App. The entire aesthetic look of the App was built using XML and Material UI. Unfortunately, we were not able to achieve the look that many other teams achieved (by using higher level API and other frameworks). Nonetheless, despite us building our app using Android Java, and also a lack of artistic flair on our part, we redid the entire look of our app. We also received praise by our mentor and 3 other teams during our project evaluation that our UI greatly improved by miles.\n\nAnother issue was setting up the backend for our app. We were using Heroku free tier to run our backend scripts as well, but due to the large number of build packs used, deploying was impossible as the server would time out after 15 minutes. Due to our inexperience, we tried to download and precompile 23GB of slug and then push them into the backend instead to save time. However, our computers were not configured to the environment required for the slug to compile and so we spent 3 days trying to figure out a workaround. However, it was easily resolved with an email to Heroku’s Helpdesk to extend the build time to 30 minutes instead after realising pre-compilation was an impossible task.\n\nLastly, compatibility issues were also a very huge problem from the start. We originally planned to use Google ORTools as one of the API to implement a feature of the app. However, it was not well documented that ORTools API was not compatible with computers of ARM Architecture. I tasked myself to actually try out the API but realised that the native libraries could not be loaded. I then spent 1 full week trying to debug the API but to no avail. We only found out after searching through Stack Overflow that the maintainer mentioned that it was not tested on M1 Macs yet. We had to abandon the API and used Z3 SMT Solver instead which was developed by Microsoft. This would make the implementation more complex as well, but regardless, we managed to build the feature successfully and adhere to Software Engineering Principles despite the added complexity.\n\nDespite all these challenges, my partner and I managed to achieve the highest level of achievement possible for the module and even presented our posters during the project showcase. The achievement came with many setbacks along the way, but it definitely taught me to be resilient and to persevere no matter what. I think these traits are really important in the current workforce. We also learnt how to write industry-style code and several software engineering principles which would be very valuable to apply in any technology-based setting in the future. Thus, this challenging task actually turned out to be very fruitful and rewarding.",
        "slug": "cp2106-independent-software-development-project-orbital",
        "aysem": {
          "aySem": "Academic Year 2021-2022 Summer"
        },
        "description": "Orbital provides a platform for students to gain hands-on industrial experience for computing technologies related to students’ own interests. Done in pairs of two, Orbital students propose, design, execute, implement and market their project to peers and faculty. Peer assessment and critique of others’ projects are key components of the modules’ deliverables."
      },
      {
        "moduleName": "CS2100 : Computer Organisation",
        "contentMain": "This module is taught by Prof Colin Tan and Prof Prabhu. We had to watch lots of lecture videos (around 5hrs) per week and then there is 1hr of labs, 1hr of tutorials. Labs are generally easy, I breezed through it and left the lab as soon as I was done with the demonstration. Tutorials were tedious to do, but not hard once you get it.\n\nThere is a midterm and a final. For midterms, I actually was very nervous in the morning, even though I was actually quite prepared. The nerves got to me when I scored 18/25 (25th percentile) due to carelessness. This is where I start to realise that if the exams are too easy, the tendency is that it is going to turn out badly for me. Alas, I thought I could recover my grades over the finals, but I felt really ill during the period and I messed up the finals as well. That was unfortunate, but I learnt that I cannot have everything go well too. Ended up with a B+ (expected a B given the lack of confidence)\n\nI think this is the most hand-sore module I have ever taken. Do not get me wrong, I do not find the topics hard to understand, it is just very tedious to do certain questions. I particularly struggled with the last 2 chapters (Pipelining and Caching). There are many things during each question that you can trip up on or get careless about without you even knowing. I honestly could not understand why people find this module easy. Sure the content (excluding pipelining and caching) was easy and fun to me, but doing the questions becomes a chore. Finals were done on the worst platform possible for the nature of this module: Examplify. Apparently it was a good idea to put circuits on the screen of the computer where it becomes super hard to trace. =/\n\n",
        "slug": "cs2100-computer-organisation",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 1"
        },
        "description": "The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered include data representation systems, combinational and sequential circuit design techniques, assembly language, processor execution cycles, pipelining, memory hierarchy and input/output systems."
      },
      {
        "moduleName": "CS3230 : Design and Analysis of Algorithms",
        "contentMain": "This module was taught by Prof Arnab and Prof Prashant.\n\nThere is a midterm and a final. There is an assignment to be submitted every week and it is graded by effort, except for 3 weeks where it will be graded for correctness. I tend to overkill my assignments by proving everything really rigorously with mathematics. (I am also a maths major and I believe it is expected to be more rigorous than my CompSci peers.) There are also 2 code problems which can get you extra credit.\n\nThis has to be my favourite module I have taken so far. I have always enjoyed problem-solving using algorithms and now I am learning much more advanced topics and solving harder problems. Everyone, except me and my group of friends, tends to hate this module. It really shows in the result statistics when the median and mean for the midterm and final are both a fail. I got above the 75th percentile for all my assessments and got an A as a result. I really expect this because I want to avenge my failure (A- for CS2040S and B+ for CS1231S, booooooo)\n\nI really enjoyed my tutorial as well. The questions are challenging enough and it is a good use of the morning to crack some hard problems and get the brain starting. My tutor is also very dedicated and explained things clearly. He also made sure to go around to everyone to check on their progress and make sure they understood what is going on.",
        "slug": "cs3230-design-and-analysis-of-algorithms",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 1"
        },
        "description": "This module introduces different techniques of designing and analysing algorithms. Students will learn about the framework for algorithm analysis, for example, lower bound arguments, average case analysis, and the theory of NP-completeness. \n\nIn addition, students are exposed to various algorithm design paradigms. The module serves two purposes: to improve the students' ability to design algorithms in different areas, and to prepare students for the study of more advanced algorithms.\n\nThe module covers lower and upper bounds, recurrences, basic algorithm paradigms (such as prune-and-search, dynamic programming, branch-and-bound, graph traversal, and randomised approaches), amortized analysis, NP-completeness, and some selected advanced topics."
      },
      {
        "moduleName": "MA2101 : Linear Algebra II",
        "contentMain": "This module is taught by Prof Zhang Deqi. He (haiiizz) is the prof who has the most ASMR voice ever. He just reads off the notes and goes at breakneck speed. Can I also say, the proofs he wrote are almost unreadable due to his handwriting? As a result, before midterms, I spent an entire weekend proving 107 theorems all by hand so that it can help me for revision for the Finals. I gave up going to lectures after midterm but I still attempt and attend tutorials.\n\nThere are 5 homework problems (easy), a midterm and a final. I got careless for 1 question in the midterm (scored 79% for the midterm which is below median) due to me misinterpreting a question. I think the final was easy which killed me a bit because everyone would have done very well. Ended up with a disgraceful B+ (probably caused by midterm)\n\nThis module is really wasted. I was very much looking forward to learning more about Linear Algebra but Prof Zhang made it super dull and almost impossible to follow I realised (albeit too late), that attending lectures was counterproductive and I am better off studying the module by myself, which is possible as I am confident with my mathematical ability. I should have applied for the 5MC S-version instead. It is harder, but it will be worth it. I don't need a prof who adds to my workload unnecessarily.",
        "slug": "ma2101-linear-algebra-ii",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 1"
        },
        "description": "This module is a continuation of MA1101 Linear Algebra I intended for second year students. The student will learn more advanced topics and concepts in linear algebra. A key difference from MA1101 is that there is a greater emphasis on conceptual understanding and proof techniques than on computations. \n\nMajor topics: Matrices over a field. Determinant. Vector spaces. Subspaces. Linear independence. Basis and dimension. Linear transformations. Range and kernel. Isomorphism. Coordinates. Representation of linear transformations by matrices. Change of basis. Eigenvalues and eigenvectors. Diagonalizable linear operators. Cayley-Hamilton Theorem. Minimal polynomial. Jordan canonical form. Inner product spaces. Cauchy-Schwartz inequality. Orthonormal basis. Gram-Schmidt Process. Orthogonal complement. Orthogonal projections. Best approximation. The adjoint of a linear operator. Normal and self-adjoint operators. Orthogonal and unitary operators."
      },
      {
        "moduleName": "MA2108 : Mathematical Analysis I",
        "contentMain": "This module is taught by Prof An Xinliang. There was a midterm and a final with some assignments along the way. I did very well for midterm (close to full marks) and I think I did ok for finals -- But I got a B+ for this module. Imagine the bell curve yourself.\n\nI was actually quite stressed about this module as it is known to end lives of mathematicians. Topics were abstract and involved some creativity and insight to solve. The tutorial sessions were the most abysmal I have ever known. My tutor was so dead and there were barely any people in the class. Not more than 5 people I swear. I remembered being 1 of 3 people who turned up.\n\nI think this module is also wasted. The prof made the exams too easy (and too much regurgitation) such that it is too easy to score. It does not really test us on our true understanding of analysis at all. I have friends who scored higher than me for midterms with a B/B- for this module. \n\nI think if they intend to rush Chapter 11 (Topology) towards the end of the semester, I suggest they just drop it and move it to MA3210 Mathematical Analysis II or MA3209 Metric and Topological Spaces. For revision, I literally just memorised all the topology proofs without understanding them. It was taught too fast and I did not have enough time to really internalise the concepts. Topology is elegant until this prof (or this module rather) destroyed its reputation for me.",
        "slug": "ma2108-mathematical-analysis-i",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 1"
        },
        "description": "This module is a continuation of MA1100. The main objective is to further develop the student's mastery of the mathematical language, concepts, and methods. The focus here is more on the analytic and topological notions such as convergence and continuity, which are essential for a rigorous treatment of mathematical analysis. The student's ability to read and write mathematical proofs is also further developed in this module. \n\nMain topics: real numbers, sequences and series of real numbers, metrics in Euclidean spaces, open and closed sets, continuous functions, compact sets, connected sets, sequences of functions. Major applications include: intermediate value theorem, extreme value theorem.\n"
      },
      {
        "moduleName": "ES2660 : Communicating in the Information Age",
        "contentMain": "This module is a core module and was delivered through sectional teaching. My tutor is Ms Lyna (the best and most engaging tutor I have ever met). She appears to get very high for lessons which got me interested and engaged in the content. I was initially very shy and quiet but ended up having the confidence to speak my mind in class. I got an A+ for this module, and I attribute this success to her.\n\nThis module has also improved my writing skills. I went from getting average scores for CA1 (Being critical about critical thinking), to above average (CA2 : Coming up with a Critical Thinking Framework) and then topping the class for Online Commentary (Final CA).\n\nI also want to thank my group mates, 2 Y4s and another Y2 for bringing the best out of me in this module. During CA2, they really put their heart and soul to help me build confidence in my speech, and during the Online Commentary evaluation, they gave such insightful comments to improve my essay which landed me the top grade.\n\nMy suggestion for all SoC students to take this module seriously. Workload-wise, it is worth 4 MCs. If you put in the heart and effort to it, the workload in hindsight is not that high. It can serve as a breather to your other modules. It will help in your professional development as a speaker, presenter and writer. Do not go into this with your S/U mentality!",
        "slug": "es2660-communicating-in-the-information-age",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 1"
        },
        "description": "In a context of prolific production and convenient access to content and innovation in the Information Age, how should one critically process and clearly communicate ideas to various audiences? In this module, students will learn to question and articulate their analysis of assumptions and assertions on issues facing the Information Age through processes such as identifying bias and substantiating arguments. The Ennis’ (1986, 2001) taxonomy of critical thinking dispositions will be employed to develop students’ analytical thinking skills and their ability to articulate cogent responses to arguments or to defend their own positions in both written and oral form."
      },
      {
        "moduleName": "CS2101 : Effective Communication for Computing Professionals",
        "contentMain": "This module is taught via sectional teaching. My Professor is Prof Catherine Wee. This is a paired-module with *CS2103T (Software Engineering)* \n\nMy class is held every Monday and Thursday, 8am - 10am, though it tends to end at 9.30am. There are 5 CAs, CA1 and CA5 are critical reflections, CA2 and CA3 are Oral Presentations whilst CA4 is the user guide submission based on your software product for CS2103T.\n\nPersonally, I learnt a lot from this module. Though, a lot are repeats of ES2660. Hence, there was not much difficulty in doing the writing assignments. My writing has gotten better due to ES2660 which helped me get very high grades for my writing CAs. However, for our first oral presentation, my group and I presented on the importance of our Resume and Cover Letter. My group consisted of random people from other software groups and a friend. Surprisingly, everyone was pretty good at their job and contributed significantly to the presentation which is great! We were praised for our teamwork as well, especially during QnA.\n\nFor the second presentation, the 5 people from your CS2103T group will be split into 2 or 3. One sub-group will do a demo for the product, whilst the others will do a pitch. I belonged to the pitch team. My team was already very effective to begin with, hence I do not think there is much of a workload problem since everyone contributed quite a lot. Not much issues there.\n\nI think this module is very chill. I did not remember needing to put in extra work for it. Just try to do your best and get the most out of it.\n\nGrade : A",
        "slug": "cs2101-effective-communication-for-computing-professionals",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 2"
        },
        "description": "This module aims to equip students with the skills needed to communicate technical information to technical and nontechnical audiences, and to create comprehensible software documentation. A student-centric approach will be adopted to encourage independent and collaborative learning while engaging students in team-based projects. Students will learn interpersonal and intercultural communication skills as well as hone their oral and written communication skills. Assessment modes include a variety of oral and written communication tasks such as reports, software guides, oral presentations, software demonstrations and project blogs."
      },
      {
        "moduleName": "CS2109S : Introduction to Artificial Intelligence and Machine Learning",
        "contentMain": "This module is taught by Prof Ben Leong (yes the infamous one). It has a 2hr lecture and 1hr tutorial per week. \n\nThere are around 8 Psets, 1 Midterm and a Final and a Mini Project. The Psets are quite easy. Usually it is done within a day or 2. As for the midterm, I was actually pretty confident since algorithms are my strong point, and I also enjoyed CS2040S and CS3230 a lot and scored a good grade. However, time was very tight. The decision tree question had the most convoluted way of shading. TBH I think the prof is better off using \"visual input\" to mark our decision trees as opposed to making us shade. That cost me a lot of time which made me forgo a 28 mark qns. I got full marks for the classical AI question. Eventually scored slightly above median.\n\nFor the mini-project, we had to use alpha-beta pruning to play Breakthrough. We had to minimally beat the hidden baby and base agent, and then your final score was based on the competition round. AKA how many people can you beat. I scored below median for this with a rank of 170 out of 250(?). This project ate up a lot of my time, but I managed to beat baby and base agent with only 3 levels whilst in isolation (I got Covid at that time).\n\nThe final project was a 28hr Kaggle Contest held on Saturday (Hari Raya Puasa night at 8 pm). Basically, we were given a dataset with labels V0 .... V60 and some images too. I had already had some templates built beforehand from the mock, so I managed to get a working model around 2 hours in(?). However, this was the most stressful 28hrs ever because there was a live scoreboard. When you think you scored a good enough metric, a few hours later, you are probably at the bottom few already. I had to repeatedly do Hyperparameter tunings and random seeding. At around 11 pm on Sunday, I gave up and just submitted my code and report. I eventually scored 85/100 with a 56th percentile performance in the performance metric of my model on the hidden dataset.\n\nLectures were the most useless thing ever. I think Prof Ben Leong dumbed down a lot of the math necessary for ML because he was scared (?) we suck at math. I stopped going to lectures straight after midterms. I studied the content myself and watched Youtube videos, and read books and articles online instead. My tutor for tutorials is very knowledgeable and well-prepared. He is the same year as me, and he is very articulate. I really appreciated it. I think I learnt more from him than the Prof.\n\nGrade : A-",
        "slug": "cs2109s-introduction-to-artificial-intelligence-and-machine-learning",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 2"
        },
        "description": "This course introduces basic concepts in Artificial Intelligence (AI) and Machine Learning (ML). It adopts the perspective that planning, games, and learning are related types of search problems, and examines the underlying issues, challenges and techniques. Planning/games related topics include tree/graph search, A* search, local search, and adversarial search (e.g., games). Learning related topics include supervised and unsupervised learning, model validation, and neural networks."
      },
      {
        "moduleName": "MA2104 : Multivariable Calculus",
        "contentMain": "This module is taught by Prof Zhang Tengren. There are 3 assignments, a midterm and a final. The assignments were challenging and fun enough. I panicked during the midterm but I recollected myself and scored 48/50. The final is relatively easy for me.\n\nI maybe attended 20% of the lectures and perhaps just 3 tutorial sessions. I went for my friend's tutorial session instead of the one I registered for. I found this module easy and almost negligible workload because I have learnt most of the stuff during NS by self-studying the Oxford Maths course equivalent.\n\nThe only difficult part about this module is the high risk of carelessness. It is a very computational module, with little to no proving. I implore students to use a GC and check each step correctly. Are your bounds correct? Is the solid you identified the correct one? Are you missing a constant? Did you miss out the Jacobian?\n\nWhat I liked about Prof Zhang (or rather what I learnt from him) is that he is a good artist. The 3D graphs he draws are so helpful for visualisation. My drawing skills for this module improved and this is actually very useful when doing questions. Prof Zhang is also very dedicated. He even gave lectures (albeit at a different time) whilst serving his reservist training.\n\nI would recommend students who need to clear MA2104 to take it under Prof Zhang Tengren.\n\nGrade : A+",
        "slug": "ma2104-multivariable-calculus",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 2"
        },
        "description": "This is a module on the calculus of functions of several real variables, applications of which abound in mathematics, the physical sciences and engineering. The aim is for students to acquire computational skills, ability for 2- and 3-D visualisation and to understand conceptually fundamental results such as Green’s Theorem, Stokes’ Theorem and the Divergence Theorem. \n\nMajor topics Euclidean distance and elementary topological concepts in Rn, limit and continuity, implicit functions. Partial differentiation, differentiable functions, differentials, chain rules, directional derivatives, gradients, mean value theorem, Taylor’s formula, extreme value theorem, Lagrange multipliers. Multiple integrals and iterated integrals, change of order of integration, applications, Jacobian matrix, change of variables in multiple integrals. Line integrals and Green’s theorem. Surface integrals, Stokes’ Theorem, Divergence Theorem."
      },
      {
        "moduleName": "CS2103T : Software Engineering",
        "contentMain": "This module is taught by Prof Damith and Prof Ganesh. It has one of the most convoluted grading scheme ever. Long story short, you have an individual project, a team project, a Practical Bug Bounty style exam, a Final. \n\nMy individual project was to build a chatbot called Duke and we just need to fulfil certain milestones each week for our project. It is not hard if you had used Git or are good at Java. Just make sure to follow all the requirements very carefully. Adding extra things will not earn you extra marks at all. I scored full marks for this.\n\nThe team project's purpose was to teach us how to work in a software team. Our project was to extend or remodel an existing project. I think my team has very good mix of strengths. 4 people of our team of 5 already knew each other from VJC, the final girl came into our group as a total stranger to us. However, we realised that we clicked very well and managed to get things done very efficiently. We developed pretty good bonds amongst ourselves. Our team also logged the highest count in terms of lines of code. (around 30k), but there is a significant bulk that went to features and also equal amount went to testing.\n\nThis leads me to the bug bounty squid game style practical exam. We had to break other team's product for bugs and we earn marks for every bug report we submit. We also lose marks for every bug that the team finds on our product. Hence, we spent a lot of time writing test code to make sure our product doesn't bug out. Being overkill in our product, we had 52 bugs but we realised most of them were just nitpicking and hence rejected them. Moreover, I realised our testers kept giving us the wrong severity bug labels. Seems like just a desperate attempt to pull people down. \n\nOur final was split into 3 parts. Part I and III are just 16 MCQs each with 32 minutes allocated for each part on Examplify. Part II was essentially a drawing exercise and it will be sued for answering questions in Part III. I think I did ok in this final. Nothing particularly was hard as I familiarised myself with the textbook weeks in advance.\n\nI find this module very interesting because I am very new to Software Engineering. I am mostly interested in algorithms, research etc. I am also grateful for this module because I made a new friend as well. HAHA. I did not expect A- for this module as the people around (like my seniors who are more experienced in this field of expertise than me) has gotten a B+. I am very lucky that my group lifted everyone up and hence despite having the highest code count (usually teams with large code base will get B+ or B for this module), no one got a B+ or below.\n\n",
        "slug": "cs2103t-software-engineering",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 2"
        },
        "description": "This module introduces the necessary conceptual and analytical tools for systematic and rigorous development of software systems. It covers four main areas of software development, namely object-oriented system analysis, object-oriented system modelling and design, implementation, and testing, with emphasis on system modelling and design and implementation of software modules that work cooperatively to fulfill the requirements of the system. \n\nTools and techniques for software development, such as Unified Modelling Language (UML), program specification, and testing methods, will be taught. Major software engineering issues such as modularisation criteria, program correctness, and software quality will also be covered."
      },
      {
        "moduleName": "MA3252 : Linear and Network Optimisation",
        "contentMain": "This module is my first Maths 3K module and was taught by Professor Zhao Gongyun. He is an expert in optimisation problems and quite a good explainer. There are lectures on Friday at the most ungodly time ever (7 pm - 10 pm). I attended the first 2 lectures and the day where there is a midterm. I just use my Saturday morning to watch the lecture recording.\n\nI think this module is quite challenging but very fulfilling. I learnt about Linear Programs in CS3230 Design and Analysis of Algorithms but it was not taught in depth at all. There are times when the notation was a bit too much and studying the notes became very hard. However, over time, I got the hang of the notation and was able to explain a lot of the harder concepts. I was also able to relate to CS-related topics. This module is thus a very good module for CS students to reinforce what you learnt but in a more rigorous mathematical setting.\n\nI think I have a very good tutor as well. Usually, tutors from the Math department are so dead but this one is the best so far. He is very articulate and I understood his teachings very much. He was able to answer some questions of mine quite well and even gave examples and proofs too. \n\nIn terms of assessment, the midterms were a bit too easy till the average is 49/60. I scored 53/60. Finals was quite trash for me. I wanted an A for this module and I actually was pretty confident. The hard part about the exams is that you essentially become a human calculator. Imagine doing 6 steps of the simplex algorithm only to realise you messed up in the middle -- you essentially wasted the past 15mins of the exam. I did not do 1 question because I brain-farted. It was a simple execution of network simplex. Meanwhile for proof questions (my favourite), I zoomed through them because I enjoyed doing proofs for this module. I know my stuff, but the execution (especially when it comes to handwriting steps of an algorithm) is pretty bad. Got an A- in the end.\n\nOverall, a fulfilling module. This is the module which I gained the most from this semester.\n\n",
        "slug": "ma3252-linear-and-network-optimisation",
        "aysem": {
          "aySem": "Academic Year 2022-2023 Semester 2"
        },
        "description": "The objective of this course is to work on optimization problems which can be formulated as linear and network optimization problems. We formulate linear programming (LP) problems and solve them by the simplex method (algorithm). We also look at the geometrical aspect and develop the mathematical theory of the simplex method. We further study problems which may be formulated using graphs and networks. \n\nThese optimization problems can be solved by using linear or integer programming approaches. However, due to its graphical structure, it is easier to handle these problems by using network algorithmic approaches. Applications of LP and network optimization will be demonstrated. This course should help the student in developing confidence in solving many similar problems in daily life that require much computing. \n\n\nMajor topics: Introduction to LP: solving 2-variable LP via graphical methods. Geometry of LP: polyhedron, extreme points, existence of optimal solution at extreme point. Development of simplex method: basic solution, reduced costs and optimality condition, iterative steps in a simplex method, 2-phase method and Big-M method. Duality: dual LP, duality theory, dual simplex method. Sensitivity Analysis. Network optimization problems: minimal spanning tree problems, shortest path problems, maximal flow problems, minimum cost flow problems, salesman problems and postman problems."
      }
    ]
  }
}